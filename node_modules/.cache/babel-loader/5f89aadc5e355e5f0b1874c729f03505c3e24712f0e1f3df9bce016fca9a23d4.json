{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./Postdetails.css\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostDetail(_ref){let{id,image,title,content,author,likes_count,comments_count,is_liked,is_bookmarked,setModalOpen}=_ref;const[islike,setIsLike]=useState(false);const[totallike,setTotalLike]=useState(0);const[totalcomment,setTotalComment]=useState(0);const[bookmark,setBookMark]=useState(false);const[commentlist,setCommentList]=useState([]);// 모달 끄기\nconst closeModal=()=>{setModalOpen(false);};// 유저의 likes 여부와 total_like 조회\n/*   async function getPostDetail() {\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_BACKEND_PORT}/posts/`, {\n            headers: { Authorization: \"Bearer \" + localStorage.getItem(\"ACCESS_TOKEN\") }\n        })\n        if (response) {\n            setTotalLike(response.data.likes_count)\n            setTotalComment(response.data.comments_count)\n            if (response.data.is_liked === true) {\n                setIsLike(true)\n            }\n        }\n    }\n\n    // page 첫 render 시에만 Post detail을 가져오도록 설정. re-render가 될 시 실행되는 경우 방지를 위해 빈 배열을 넣음\n    useEffect(() => {\n        getPostDetail();\n      }, [])\n\n    function handleLikeClick () {\n        if (islike) setTotalLike(totallike-1);\n        else setTotalLike(totallike+1);\n        setIsLike(!islike);\n    }\n*/ // img tag는 relative, img 안의 likes button은 absolute로 지정. 가리면 z-index 설정바람.\n// like button에 삼항연산자를 사용하여 islike 상태에 따라 다르게 보이게 함.\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"modalbox\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:\"@username\"}),/*#__PURE__*/_jsx(\"div\",{className:\"img-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://file.mk.co.kr/meet/neds/2023/09/image_readtop_2023_746119_16960518015645499.jpeg\",className:\"post-img\",alt:\"\\uACB0\\uACFC\\uC774\\uBBF8\\uC9C0\"})})]})})});}export default PostDetail;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","PostDetail","_ref","id","image","title","content","author","likes_count","comments_count","is_liked","is_bookmarked","setModalOpen","islike","setIsLike","totallike","setTotalLike","totalcomment","setTotalComment","bookmark","setBookMark","commentlist","setCommentList","closeModal","children","className","src","alt"],"sources":["/Users/joshuagwak/Documents/workspace/joshua_finalCSS/src/Modals/PostDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Postdetails.css\";\nimport axios from \"axios\";\n\nfunction PostDetail({\n  id,\n  image,\n  title,\n  content,\n  author,\n  likes_count,\n  comments_count,\n  is_liked,\n  is_bookmarked,\n  setModalOpen,\n}) {\n  const [islike, setIsLike] = useState(false);\n  const [totallike, setTotalLike] = useState(0);\n  const [totalcomment, setTotalComment] = useState(0);\n  const [bookmark, setBookMark] = useState(false);\n  const [commentlist, setCommentList] = useState([]);\n\n  // 모달 끄기\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  // 유저의 likes 여부와 total_like 조회\n  /*   async function getPostDetail() {\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_BACKEND_PORT}/posts/`, {\n            headers: { Authorization: \"Bearer \" + localStorage.getItem(\"ACCESS_TOKEN\") }\n        })\n        if (response) {\n            setTotalLike(response.data.likes_count)\n            setTotalComment(response.data.comments_count)\n            if (response.data.is_liked === true) {\n                setIsLike(true)\n            }\n        }\n    }\n\n    // page 첫 render 시에만 Post detail을 가져오도록 설정. re-render가 될 시 실행되는 경우 방지를 위해 빈 배열을 넣음\n    useEffect(() => {\n        getPostDetail();\n      }, [])\n\n    function handleLikeClick () {\n        if (islike) setTotalLike(totallike-1);\n        else setTotalLike(totallike+1);\n        setIsLike(!islike);\n    }\n*/\n\n  // img tag는 relative, img 안의 likes button은 absolute로 지정. 가리면 z-index 설정바람.\n  // like button에 삼항연산자를 사용하여 islike 상태에 따라 다르게 보이게 함.\n  return (\n    <div>\n      <div className=\"modalbox\">\n        <div className=\"modal\">\n          <div className=\"username\">@username</div>\n          <div className=\"img-container\">\n            <img\n              src=\"https://file.mk.co.kr/meet/neds/2023/09/image_readtop_2023_746119_16960518015645499.jpeg\"\n              className=\"post-img\"\n              alt=\"결과이미지\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostDetail;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAWhB,IAXiB,CAClBC,EAAE,CACFC,KAAK,CACLC,KAAK,CACLC,OAAO,CACPC,MAAM,CACNC,WAAW,CACXC,cAAc,CACdC,QAAQ,CACRC,aAAa,CACbC,YACF,CAAC,CAAAV,IAAA,CACC,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACqB,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAACuB,YAAY,CAAEC,eAAe,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAC,CACnD,KAAM,CAACyB,QAAQ,CAAEC,WAAW,CAAC,CAAG1B,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC2B,WAAW,CAAEC,cAAc,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAElD;AACA,KAAM,CAAA6B,UAAU,CAAGA,CAAA,GAAM,CACvBX,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAED;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAvBE,CAyBA;AACA;AACA,mBACEd,IAAA,QAAA0B,QAAA,cACE1B,IAAA,QAAK2B,SAAS,CAAC,UAAU,CAAAD,QAAA,cACvBxB,KAAA,QAAKyB,SAAS,CAAC,OAAO,CAAAD,QAAA,eACpB1B,IAAA,QAAK2B,SAAS,CAAC,UAAU,CAAAD,QAAA,CAAC,WAAS,CAAK,CAAC,cACzC1B,IAAA,QAAK2B,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC5B1B,IAAA,QACE4B,GAAG,CAAC,0FAA0F,CAC9FD,SAAS,CAAC,UAAU,CACpBE,GAAG,CAAC,gCAAO,CACZ,CAAC,CACC,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAA1B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}