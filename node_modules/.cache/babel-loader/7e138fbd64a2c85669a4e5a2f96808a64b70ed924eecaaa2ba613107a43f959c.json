{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import TypingTitle from\"../Typing.jsx\";import SignIn from\"../Modals/SignIn.jsx\";import Loading from\"../Components/Loading.jsx\";import\"../Layout/Layout.css\";import axios from\"axios\";import{Link,useNavigate}from\"react-router-dom\";import useStore from\"../store/store\";import Posting from\"../Components/Posting.jsx\";// Loading 추가한 뒤에, 자꾸 신택스에러 뜸ㅠㅠㅠㅠㅠ\n// Create 버튼 누르면 로딩창 띄우도록 설정해주세s\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(){const[loading,setLoading]=useState(true);const navigate=useNavigate();const[createbarinput,setCreatebarInput]=useState(\"\");const[postlist,setPostList]=useState([]);const{setGeneratedImageUrl,setPrompt,setIsLogin}=useStore();// page 렌더링 시 createbar에 포커스가 되도록 useRef, useEffect를 사용\nconst createbarInputRef=useRef();// 모달창 노출 여부 state\nconst[modalOpen,setModalOpen]=useState(false);// 모달창 노출\nconst showModal=()=>{setModalOpen(true);};// 클릭하면 렌더 일어남!\nconst handleCreatebarInputChange=e=>{setCreatebarInput(e.target.value);};// 서버에서 post를 조회하는 함수\nasync function requestPostsImages(){try{setPostList([]);// postlist 초기화\n// .env를 바탕으로 backend 상대경로를 지정. Query string을 사용하여 최신순으로 정렬. query string 사용 시 post?_sort=id&_order=desc 넣기\nconst response=await axios.get(\"\".concat(process.env.REACT_APP_BACKEND_URL,\":\").concat(process.env.REACT_APP_BACKEND_PORT,\"/posts/\"),{headers:{Authorization:\"Bearer \"+localStorage.getItem(\"ACCESS_TOKEN\")}});if(response){console.log(\"post를 모두 불러오는 중...\");console.log(\"Data를 불러옵니다.:\",response.data);setPostList(response.data);}}catch(error){console.log(\"Error:\",error);}}// DALL-E에 사용할 prompt를 서버에 전달해 이미지를 만드는 함수\nasync function createPostImage(){try{setLoading(true);// 호출 전 loding을 true로 변경\nconst response=await axios.post(\"\".concat(process.env.REACT_APP_BACKEND_URL,\":\").concat(process.env.REACT_APP_BACKEND_PORT,\"/posts/dalle/\"),{prompt:createbarinput},{headers:{Authorization:\"Bearer \"+localStorage.getItem(\"ACCESS_TOKEN\")}// 토큰 전달\n});if(response){setPrompt(createbarinput);setGeneratedImageUrl(response.data.image);setLoading(false);}navigate(\"../result\");}catch(error){console.log(\"생성 실패\");console.log(\"Error:\",error);setLoading(false);}}// Loading 관련 함수\nconst mainApi=async()=>{setLoading(true);// api 호출 전에 true로 변경하여 로딩화면 띄우기\ntry{const response=await fetch(\"api url\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify()});const result=await response.json();console.log(\"mainData\",result);setLoading(false);// api 호출 완료 됐을 때 false로 변경하려 로딩화면 숨김처리\n}catch(error){window.alert(error);}};// re-render가 될 시에도 실행되는 경우를 방지하기 위해 빈 배열을 넣음\nuseEffect(()=>{createbarInputRef.current.focus();requestPostsImages();},[]);const moveToCreate=()=>{navigate(\"../mainguest\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"MainWallpaper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"Dalle_createbar\",value:createbarinput,onChange:handleCreatebarInputChange,ref:createbarInputRef,placeholder:\"Create your own K-POP idol!\"}),/*#__PURE__*/_jsxs(\"a\",{className:\"Createbtn\",onClick:createPostImage,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Create\"}),/*#__PURE__*/_jsx(\"div\",{class:\"transition\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"containerArea\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uBC15\\uC2A4 \\uB730 \\uC601\\uC5ED\"}),/*#__PURE__*/_jsx(\"div\",{className:\"post_box\"}),loading?/*#__PURE__*/_jsx(Loading,{}):null,postlist.map(posts=>/*#__PURE__*/_jsx(Posting,{id:posts.id,image:posts.generated_image,title:posts.title,content:posts.content},posts.id))]})]});}export default Main;","map":{"version":3,"names":["React","useState","useRef","useEffect","TypingTitle","SignIn","Loading","axios","Link","useNavigate","useStore","Posting","jsx","_jsx","jsxs","_jsxs","Main","loading","setLoading","navigate","createbarinput","setCreatebarInput","postlist","setPostList","setGeneratedImageUrl","setPrompt","setIsLogin","createbarInputRef","modalOpen","setModalOpen","showModal","handleCreatebarInputChange","e","target","value","requestPostsImages","response","get","concat","process","env","REACT_APP_BACKEND_URL","REACT_APP_BACKEND_PORT","headers","Authorization","localStorage","getItem","console","log","data","error","createPostImage","post","prompt","image","mainApi","fetch","method","Accept","body","JSON","stringify","result","json","window","alert","current","focus","moveToCreate","className","children","type","onChange","ref","placeholder","onClick","class","map","posts","id","generated_image","title","content"],"sources":["/Users/joshuagwak/Documents/workspace/joshua_finalCSS/src/Pages/Main.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport TypingTitle from \"../Typing.jsx\";\nimport SignIn from \"../Modals/SignIn.jsx\";\nimport Loading from \"../Components/Loading.jsx\";\nimport \"../Layout/Layout.css\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport useStore from \"../store/store\";\nimport Posting from \"../Components/Posting.jsx\";\n\n// Loading 추가한 뒤에, 자꾸 신택스에러 뜸ㅠㅠㅠㅠㅠ\n// Create 버튼 누르면 로딩창 띄우도록 설정해주세s\n\nfunction Main() {\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const [createbarinput, setCreatebarInput] = useState(\"\");\n  const [postlist, setPostList] = useState([]);\n  const { setGeneratedImageUrl, setPrompt, setIsLogin } = useStore();\n  // page 렌더링 시 createbar에 포커스가 되도록 useRef, useEffect를 사용\n  const createbarInputRef = useRef();\n\n  // 모달창 노출 여부 state\n  const [modalOpen, setModalOpen] = useState(false);\n\n  // 모달창 노출\n  const showModal = () => {\n    setModalOpen(true);\n  };\n\n  // 클릭하면 렌더 일어남!\n  const handleCreatebarInputChange = (e) => {\n    setCreatebarInput(e.target.value);\n  };\n\n  // 서버에서 post를 조회하는 함수\n  async function requestPostsImages() {\n    try {\n      setPostList([]); // postlist 초기화\n      // .env를 바탕으로 backend 상대경로를 지정. Query string을 사용하여 최신순으로 정렬. query string 사용 시 post?_sort=id&_order=desc 넣기\n      const response = await axios.get(\n        `${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_BACKEND_PORT}/posts/`,\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"ACCESS_TOKEN\"),\n          },\n        },\n      );\n      if (response) {\n        console.log(\"post를 모두 불러오는 중...\");\n        console.log(\"Data를 불러옵니다.:\", response.data);\n        setPostList(response.data);\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  }\n\n  // DALL-E에 사용할 prompt를 서버에 전달해 이미지를 만드는 함수\n  async function createPostImage() {\n    try {\n      setLoading(true); // 호출 전 loding을 true로 변경\n      const response = await axios.post(\n        `${process.env.REACT_APP_BACKEND_URL}:${process.env.REACT_APP_BACKEND_PORT}/posts/dalle/`,\n        {\n          prompt: createbarinput,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"ACCESS_TOKEN\"),\n          }, // 토큰 전달\n        },\n      );\n      if (response) {\n        setPrompt(createbarinput);\n        setGeneratedImageUrl(response.data.image);\n        setLoading(false);\n      }\n      navigate(\"../result\");\n    } catch (error) {\n      console.log(\"생성 실패\");\n      console.log(\"Error:\", error);\n      setLoading(false);\n    }\n  }\n\n  // Loading 관련 함수\n  const mainApi = async () => {\n    setLoading(true); // api 호출 전에 true로 변경하여 로딩화면 띄우기\n    try {\n      const response = await fetch(`api url`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(),\n      });\n\n      const result = await response.json();\n      console.log(\"mainData\", result);\n      setLoading(false); // api 호출 완료 됐을 때 false로 변경하려 로딩화면 숨김처리\n    } catch (error) {\n      window.alert(error);\n    }\n  };\n\n  // re-render가 될 시에도 실행되는 경우를 방지하기 위해 빈 배열을 넣음\n  useEffect(() => {\n    createbarInputRef.current.focus();\n    requestPostsImages();\n  }, []);\n\n  const moveToCreate = () => {\n    navigate(\"../mainguest\");\n  };\n\n  return (\n    <div className=\"MainWallpaper\">\n      <div className=\"header\">\n        <input\n          type=\"text\"\n          className=\"Dalle_createbar\"\n          value={createbarinput}\n          onChange={handleCreatebarInputChange}\n          ref={createbarInputRef}\n          placeholder=\"Create your own K-POP idol!\"\n        />\n        {/* 요거 위에 있는 만들기 버튼으로 대체 */}\n        <a className=\"Createbtn\" onClick={createPostImage}>\n          <span>Create</span>\n          <div class=\"transition\"></div>\n        </a>\n      </div>\n      <div className=\"containerArea\">\n        <h1>박스 뜰 영역</h1>\n        <div className=\"post_box\"></div>\n        {loading ? <Loading /> : null}\n        {postlist.map((posts) => (\n          <Posting\n            key={posts.id}\n            id={posts.id}\n            image={posts.generated_image}\n            title={posts.title}\n            content={posts.content}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,MAAO,sBAAsB,CAC7B,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAE/C;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAkB,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACqB,QAAQ,CAAEC,WAAW,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAEuB,oBAAoB,CAAEC,SAAS,CAAEC,UAAW,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAClE;AACA,KAAM,CAAAiB,iBAAiB,CAAGzB,MAAM,CAAC,CAAC,CAElC;AACA,KAAM,CAAC0B,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACA,KAAM,CAAA6B,SAAS,CAAGA,CAAA,GAAM,CACtBD,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAE,0BAA0B,CAAIC,CAAC,EAAK,CACxCX,iBAAiB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACnC,CAAC,CAED;AACA,cAAe,CAAAC,kBAAkBA,CAAA,CAAG,CAClC,GAAI,CACFZ,WAAW,CAAC,EAAE,CAAC,CAAE;AACjB;AACA,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAA7B,KAAK,CAAC8B,GAAG,IAAAC,MAAA,CAC3BC,OAAO,CAACC,GAAG,CAACC,qBAAqB,MAAAH,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACE,sBAAsB,YAC1E,CACEC,OAAO,CAAE,CACPC,aAAa,CAAE,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAChE,CACF,CACF,CAAC,CACD,GAAIV,QAAQ,CAAE,CACZW,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACjCD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEZ,QAAQ,CAACa,IAAI,CAAC,CAC3C1B,WAAW,CAACa,QAAQ,CAACa,IAAI,CAAC,CAC5B,CACF,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEE,KAAK,CAAC,CAC9B,CACF,CAEA;AACA,cAAe,CAAAC,eAAeA,CAAA,CAAG,CAC/B,GAAI,CACFjC,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAA7B,KAAK,CAAC6C,IAAI,IAAAd,MAAA,CAC5BC,OAAO,CAACC,GAAG,CAACC,qBAAqB,MAAAH,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACE,sBAAsB,kBAC1E,CACEW,MAAM,CAAEjC,cACV,CAAC,CACD,CACEuB,OAAO,CAAE,CACPC,aAAa,CAAE,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAChE,CAAG;AACL,CACF,CAAC,CACD,GAAIV,QAAQ,CAAE,CACZX,SAAS,CAACL,cAAc,CAAC,CACzBI,oBAAoB,CAACY,QAAQ,CAACa,IAAI,CAACK,KAAK,CAAC,CACzCpC,UAAU,CAAC,KAAK,CAAC,CACnB,CACAC,QAAQ,CAAC,WAAW,CAAC,CACvB,CAAE,MAAO+B,KAAK,CAAE,CACdH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CACpBD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEE,KAAK,CAAC,CAC5BhC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAEA;AACA,KAAM,CAAAqC,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1BrC,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,GAAI,CACF,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAAoB,KAAK,WAAY,CACtCC,MAAM,CAAE,MAAM,CACdd,OAAO,CAAE,CACPe,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACvB,CAAC,CAAC,CAEF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAA1B,QAAQ,CAAC2B,IAAI,CAAC,CAAC,CACpChB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEc,MAAM,CAAC,CAC/B5C,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CAAE,MAAOgC,KAAK,CAAE,CACdc,MAAM,CAACC,KAAK,CAACf,KAAK,CAAC,CACrB,CACF,CAAC,CAED;AACA/C,SAAS,CAAC,IAAM,CACdwB,iBAAiB,CAACuC,OAAO,CAACC,KAAK,CAAC,CAAC,CACjChC,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAiC,YAAY,CAAGA,CAAA,GAAM,CACzBjD,QAAQ,CAAC,cAAc,CAAC,CAC1B,CAAC,CAED,mBACEJ,KAAA,QAAKsD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BvD,KAAA,QAAKsD,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBzD,IAAA,UACE0D,IAAI,CAAC,MAAM,CACXF,SAAS,CAAC,iBAAiB,CAC3BnC,KAAK,CAAEd,cAAe,CACtBoD,QAAQ,CAAEzC,0BAA2B,CACrC0C,GAAG,CAAE9C,iBAAkB,CACvB+C,WAAW,CAAC,6BAA6B,CAC1C,CAAC,cAEF3D,KAAA,MAAGsD,SAAS,CAAC,WAAW,CAACM,OAAO,CAAExB,eAAgB,CAAAmB,QAAA,eAChDzD,IAAA,SAAAyD,QAAA,CAAM,QAAM,CAAM,CAAC,cACnBzD,IAAA,QAAK+D,KAAK,CAAC,YAAY,CAAM,CAAC,EAC7B,CAAC,EACD,CAAC,cACN7D,KAAA,QAAKsD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BzD,IAAA,OAAAyD,QAAA,CAAI,kCAAO,CAAI,CAAC,cAChBzD,IAAA,QAAKwD,SAAS,CAAC,UAAU,CAAM,CAAC,CAC/BpD,OAAO,cAAGJ,IAAA,CAACP,OAAO,GAAE,CAAC,CAAG,IAAI,CAC5BgB,QAAQ,CAACuD,GAAG,CAAEC,KAAK,eAClBjE,IAAA,CAACF,OAAO,EAENoE,EAAE,CAAED,KAAK,CAACC,EAAG,CACbzB,KAAK,CAAEwB,KAAK,CAACE,eAAgB,CAC7BC,KAAK,CAAEH,KAAK,CAACG,KAAM,CACnBC,OAAO,CAAEJ,KAAK,CAACI,OAAQ,EAJlBJ,KAAK,CAACC,EAKZ,CACF,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAA/D,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}